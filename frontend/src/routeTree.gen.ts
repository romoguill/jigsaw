/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as GamesIdImport } from './routes/games/$id'
import { Route as AdminAdminImport } from './routes/admin/_admin'
import { Route as AdminAdminIndexImport } from './routes/admin/_admin/index'
import { Route as AdminAdminPathImport } from './routes/admin/_admin/path'
import { Route as AdminAdminDetailTestImport } from './routes/admin/_admin/detail-test'

// Create Virtual Routes

const AdminImport = createFileRoute('/admin')()

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const GamesIdRoute = GamesIdImport.update({
  id: '/games/$id',
  path: '/games/$id',
  getParentRoute: () => rootRoute,
} as any)

const AdminAdminRoute = AdminAdminImport.update({
  id: '/_admin',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminPathRoute = AdminAdminPathImport.update({
  id: '/path',
  path: '/path',
  getParentRoute: () => AdminAdminRoute,
} as any)

const AdminAdminDetailTestRoute = AdminAdminDetailTestImport.update({
  id: '/detail-test',
  path: '/detail-test',
  getParentRoute: () => AdminAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/admin/_admin': {
      id: '/admin/_admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminImport
      parentRoute: typeof AdminRoute
    }
    '/games/$id': {
      id: '/games/$id'
      path: '/games/$id'
      fullPath: '/games/$id'
      preLoaderRoute: typeof GamesIdImport
      parentRoute: typeof rootRoute
    }
    '/admin/_admin/detail-test': {
      id: '/admin/_admin/detail-test'
      path: '/detail-test'
      fullPath: '/admin/detail-test'
      preLoaderRoute: typeof AdminAdminDetailTestImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/path': {
      id: '/admin/_admin/path'
      path: '/path'
      fullPath: '/admin/path'
      preLoaderRoute: typeof AdminAdminPathImport
      parentRoute: typeof AdminAdminImport
    }
    '/admin/_admin/': {
      id: '/admin/_admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminAdminImport
    }
  }
}

// Create and export the route tree

interface AdminAdminRouteChildren {
  AdminAdminDetailTestRoute: typeof AdminAdminDetailTestRoute
  AdminAdminPathRoute: typeof AdminAdminPathRoute
  AdminAdminIndexRoute: typeof AdminAdminIndexRoute
}

const AdminAdminRouteChildren: AdminAdminRouteChildren = {
  AdminAdminDetailTestRoute: AdminAdminDetailTestRoute,
  AdminAdminPathRoute: AdminAdminPathRoute,
  AdminAdminIndexRoute: AdminAdminIndexRoute,
}

const AdminAdminRouteWithChildren = AdminAdminRoute._addFileChildren(
  AdminAdminRouteChildren,
)

interface AdminRouteChildren {
  AdminAdminRoute: typeof AdminAdminRouteWithChildren
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminAdminRoute: AdminAdminRouteWithChildren,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminAdminRouteWithChildren
  '/games/$id': typeof GamesIdRoute
  '/admin/detail-test': typeof AdminAdminDetailTestRoute
  '/admin/path': typeof AdminAdminPathRoute
  '/admin/': typeof AdminAdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminAdminIndexRoute
  '/games/$id': typeof GamesIdRoute
  '/admin/detail-test': typeof AdminAdminDetailTestRoute
  '/admin/path': typeof AdminAdminPathRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/admin/_admin': typeof AdminAdminRouteWithChildren
  '/games/$id': typeof GamesIdRoute
  '/admin/_admin/detail-test': typeof AdminAdminDetailTestRoute
  '/admin/_admin/path': typeof AdminAdminPathRoute
  '/admin/_admin/': typeof AdminAdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/games/$id'
    | '/admin/detail-test'
    | '/admin/path'
    | '/admin/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/admin' | '/games/$id' | '/admin/detail-test' | '/admin/path'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/admin/_admin'
    | '/games/$id'
    | '/admin/_admin/detail-test'
    | '/admin/_admin/path'
    | '/admin/_admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  GamesIdRoute: typeof GamesIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  GamesIdRoute: GamesIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/games/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin",
      "children": [
        "/admin/_admin"
      ]
    },
    "/admin/_admin": {
      "filePath": "admin/_admin.tsx",
      "parent": "/admin",
      "children": [
        "/admin/_admin/detail-test",
        "/admin/_admin/path",
        "/admin/_admin/"
      ]
    },
    "/games/$id": {
      "filePath": "games/$id.tsx"
    },
    "/admin/_admin/detail-test": {
      "filePath": "admin/_admin/detail-test.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/path": {
      "filePath": "admin/_admin/path.tsx",
      "parent": "/admin/_admin"
    },
    "/admin/_admin/": {
      "filePath": "admin/_admin/index.tsx",
      "parent": "/admin/_admin"
    }
  }
}
ROUTE_MANIFEST_END */
