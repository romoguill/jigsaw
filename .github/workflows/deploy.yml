name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - name: Run tests
        run: pnpm test

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e
            cd ~/apps/jigsaw
            git pull
            rm -rf apps/server/.env.production.local
            cat > apps/server/.env.production.local <<EOF
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            VITE_SERVER_URL=${{ secrets.VITE_SERVER_URL }}
            BETTER_AUTH_SECRET=${{ secrets.BETTER_AUTH_SECRET }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            UPLOADTHING_APP_ID=${{ secrets.UPLOADTHING_APP_ID }}
            UPLOADTHING_PUBLIC_URL=${{ secrets.UPLOADTHING_PUBLIC_URL }}
            UPLOADTHING_TOKEN=${{ secrets.UPLOADTHING_TOKEN }}
            EOF
            export PATH="$HOME/.nvm/versions/node/v22.11.0/bin:$HOME/.local/share/pnpm:$PATH"
            pnpm install --frozen-lockfile --config.package-manager-strict=false
            pnpm --filter @jigsaw/shared build
            pnpm --filter @jigsaw/api-client build
            pnpm --filter @jigsaw/server build
            pnpm --filter @jigsaw/frontend build
            export NODE_ENV=production
            pnpm db:generate && pnpm db:migrate
            pm2 restart jigsaw || NODE_ENV=production pm2 start "pnpm start --config.package-manager-strict=false" --name jigsaw
